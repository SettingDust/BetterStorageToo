buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

archivesBaseName = "BetterStorageToo"
group = "io.github.thestoneman.betterstorage"
version = "1.14.2-4.0.0.0"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20190627-1.14.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                playground {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                playground {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories
{
	/*maven
	{
    	// location of the maven that hosts JEI files
    	name = "Progwml6 maven"
    	url = "http://dvs1.progwml6.com/files/maven"
  	}*/
  	/*maven
  	{
    	// location of a maven mirror for JEI files, as a fallback
    	name = "ModMaven"
    	url = "modmaven.k-4u.nl"
  	}*/
  	/*ivy
    {
        name "MineTweaker3"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module]-([classifier]-)[revision].[ext]"
    }*/
    /*maven
    {
        name "RX14"
        url "http://mvn.rx14.co.uk/repo/"
    }*/
    /*ivy
    {
        name "Thaumcraft"
        //artifactPattern "https://dl.dropboxusercontent.com/u/47135879/[module]-([classifier]-)[revision].[ext]"
        // https://dl.dropboxusercontent.com/u/47135879/Baubles-1.11-1.4.3-api.zip
        url "https://dl.dropboxusercontent.com/u/47135879"
        layout "pattern",
        {
        	artifact "[module]-[revision].[ext]"
        }
    }*/
	/*ivy
	{
        name "Botania"
        artifactPattern "http://botaniamod.net/files/deobf/[module] [revision]-[classifier].[ext]"
    }*/
}

dependencies
{
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.14.3-27.0.17'

    //compile name: "Armourers-Workshop", group: "riskyken.armourersWorkshop", version: aw_version, classifier: "api"
    //compile name: "Thaumcraft"        , version: tc_version, classifier: "deobf"

    //runtime "com.azanor.baubles:Baubles:${config.baubles_version}-deobf"

    //compile name: "Botania"           , group: "vazkii.botania", version: botania_version, classifier: "deobf"
    //compile name: "InventoryTweaks"   , group: "inventorytweaks", version: invtweaks_version, classifier: "deobf"
    //compile name: "MineTweaker3"      , group: "minetweaker", version: minetweaker_version, classifier: "Dev"

	// compile against the JEI API but do not include it at runtime
	//deobfProvided "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}:api"
	// at runtime, use the full JEI jar
	//runtime "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}"
}

//task apiJar(type: Jar, dependsOn: classes)
//{
//    from sourceSets.main.output
//    include 'io/gethub/tehstoneman/betterstorage/api/**'
//    classifier = 'api'
//}

//task sourcesJar(type: Jar, dependsOn: classes)
//{
//    from sourceSets.main.allSource
//    classifier = 'sources'
//}

//task deobfJar(type: Jar)
//{
//    from sourceSets.main.output
//    classifier = 'deobf'
//}

//artifacts
//{
//    archives sourcesJar
//    archives apiJar
//    archives deobfJar
//}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "betterstorage",
            "Specification-Vendor": "TehStoneMan",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"TehStoneMan",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}